<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 配置Controller的Bean -->
    <context:component-scan base-package="controller" />
    <!-- 配置Dao的Bean -->
    <context:component-scan base-package="dao" />
    <!-- 配置Entity的Bean -->
    <context:component-scan base-package="entity" />
    <!-- 配置Service的Bean -->
    <context:component-scan base-package="service" />

    <mvc:default-servlet-handler/>
    <mvc:annotation-driven/>

    <!-- 加载数据库连接信息的属性文件 -->
    <context:property-placeholder location="classpath:jdbc-config.properties"/>
    <!-- 配置MySQL数据源的Bean -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/scuee?useSSL=false&amp;useUnicode=true&amp;allowMultiQueries=true&amp;characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="12345678"/>
    </bean>

    <!-- 配置SessionFactory的Bean -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 指定MyBatis配置文件的位置 -->
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <!-- 给实体类起别名 -->
        <property name="typeAliasesPackage" value="entity"/>
    </bean>

    <!-- 配置mapper接口的扫描器，将Mapper接口的实现类自动注入到IoC容器中
     实现类Bean的名称默认为接口类名的首字母小写 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- basePackage属性指定自动扫描mapper接口所在的包 -->
        <property name="basePackage" value="dao"/>
    </bean>
</beans>
